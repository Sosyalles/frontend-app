### **🎯 Ana Hedef**
**Hızlı, hafif ve sürdürülebilir** bir sosyal ağ platformu frontendi oluştur. **TypeScript** ile güçlü tip güvenliği sağla, **SOLID prensipleri** ile ölçeklenebilir bir yapı kur.
TypeScript tanımlamalarına dikkat et. Çok fazla bu konuda hata yapıyorsun.

Cevap verirken uzun uzun yazılar yazmanı istemiyorum sadece kodları yaz.
# Hata Çözümü

- Kullanıcının geçmiş hatalarını ve çözümlerini saklamak için knowledge-base.md dosyasını kullan.
- Bir hata tespit edildiğinde önce knowledge-base.md dosyasını kontrol et.
- Eğer hata için bir kayıt varsa, doğrudan önerilen çözümü kullan.
- Eğer hata yeni bir hata ise, knowledge-base.md dosyasına yeni bir kayıt ekleyin.

## [Hata Mesajı]
Çözüm:

## [Hata Mesajı]
Çözüm: [Çözüm Açıklaması]

- Kullanıcı aynı hatayı tekrar sorarsa, önce bu dosyayı kontrol et ve eğer çözüm varsa doğrudan yanıt ver.
- Eğer dosyada kayıtlı değilse, en iyi çözümü üret ve yeni bir kayıt oluştur.

---
### genel bağlama odaklan tüm dosyaları okuyup kodlarını yaz.
### **1️⃣ Temel Kurulum**
- **React + TypeScript** → Tip güvenliği ve modern React özellikleri
- **Minimal Bağımlılık** → Sadece gerekli kütüphaneler (Swiper, Axios, etc.)
- **Modüler Yapı** → Kolay genişletilebilir klasör organizasyonu

---

### **2️⃣ Performans & Optimizasyon**
- **Lazy Loading** → Bileşenler/routelar için dinamik import
- **Memoization** → `React.memo`, `useMemo`, `useCallback` ile gereksiz render önleme
- **API Optimizasyon** → Debounce + Otomatik cache (SWR/React Query)
- **Resim Optimizasyonu** → WebP format + Lazy load

---

### **3️⃣ State & API Yönetimi**
- **Context API** → Lightweight state yönetimi (Auth, UI Teması)
- **Axios Instance** → Interceptor'larla merkezi hata yönetimi
- **API Caching** → 1 dakikalık otomatik önbellekleme

---

### **4️⃣ UI/UX & Tasarım**
- **Tailwind CSS** → Utility-first styling + Dark mode desteği
- **Mobil Öncelikli** → Dikey akış + Hamburger menü
- **Etkileşimler** → Çift tıklama beğeni + Smooth animasyonlar
- **Erişilebilirlik** → WAI-ARIA standartları + Klavye navigasyonu

---

### **5️⃣ Güvenlik & Doğrulama**
- **JWT Auth** → HttpOnly cookie ile token saklama
- **Input Sanitizasyon** → XSS/Injection koruması
- **Yetki Kontrol** → Route guard'lar ile yetkisiz erişim engelleme

---

### **6️⃣ Temel Özellikler**
- 📍 Etkinlik keşif (Konum bazlı filtreleme)
- 📸 Profil fotoğrafı galerisi (Swiper ile)
- 🔔 Gerçek zamanlı bildirimler (WebSocket)
- ✉️ Mesajlaşma (Eşleşme sonrası aktif)

---

### **🚀 Beklenen Çıktı**
- **0.5s Altı** → Lighthouse performans skoru
- **<%100kb** → İlk yükleme boyutu (gzip)
- **SEO Dostu** → SSR/SSG desteği
- **PWA** → Offline çalışma + Bildirim
- **Clean Code** → ESLint + Prettier + TypeScript strict mode